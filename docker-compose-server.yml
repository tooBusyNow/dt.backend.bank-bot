version: "3.9"

services:

  django-app-with-gunicorn:
    image: registry.gitlab.com/toobusynow/dt.backend.bank-bot/dev:latest

    env_file: 
      - .env.docker.server
    container_name: django_gunicorn

    expose:
      - ${DJANGO_PORT}
      - ${WEBHOOK_PORT}
      - ${METRICS_PORT}

    volumes:
      - static_volume:/backend/static/

    depends_on:
      db:
        condition: service_healthy

  # -------------------------------------------------- #
  db:
    image: postgres:15-alpine3.17
    container_name: postgres_db

    env_file: 
      - .env.docker.server
    volumes:
      - postgres_data:/var/lib/postgresql/data/

    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}

    healthcheck:
      test: "pg_isready -q -h db"
      interval: 3s
      timeout: 5s
      retries: 5

    ports:
      - 5432:5432

  # -------------------------------------------------- #
  nginx:
    build: ./nginx
    container_name: nginx

    ports:
      - 1337:80

    depends_on:
      - django-app-with-gunicorn
    volumes:
      - static_volume:/backend/static/
      
    depends_on:
      - django-app-with-gunicorn

  # -------------------------------------------------- #
  unified_agent:
  
    image: cr.yandex/yc/unified-agent
    container_name: unified_agent

    ports:
      - 16241:16241

    environment:
      - PROC_DIRECTORY=/ua_proc
      - FOLDER_ID='b1g8vp06auhfbk8j09np'

    entrypoint: ""
    uts: host
    volumes:
      - /proc:/ua_proc
      - ./ua-config.yml:/etc/yandex/unified_agent/config.yml
    depends_on:
      - django-app-with-gunicorn

volumes:
  postgres_data:
  static_volume: