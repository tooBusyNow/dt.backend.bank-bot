# Generated by Django 4.2 on 2023-05-15 18:33

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254, verbose_name="email address")),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                ("tlg_id", models.IntegerField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=32)),
                ("first_name", models.CharField(max_length=64)),
                ("last_name", models.CharField(blank=True, max_length=64)),
                ("phone_number", models.CharField(blank=True, max_length=32)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "TelegramUser",
            },
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                ("uniq_id", models.IntegerField(primary_key=True, serialize=False)),
                ("party", models.CharField(choices=[("PER", "Person"), ("ENT", "Entity")], max_length=3)),
                (
                    "currency",
                    models.CharField(
                        choices=[
                            ("USD", "United States dollar"),
                            ("EUR", "Euro"),
                            ("GBP", "British pound"),
                            ("TRY", "Turkish lira"),
                            ("RUB", "Russian ruble"),
                        ],
                        max_length=3,
                    ),
                ),
                ("value", models.DecimalField(decimal_places=2, max_digits=19)),
                (
                    "owner",
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
            ],
            options={
                "verbose_name": "Account",
                "db_table": "payment_accounts",
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                ("tx_id", models.AutoField(primary_key=True, serialize=False)),
                ("tx_timestamp", models.DateTimeField(auto_now_add=True)),
                ("tx_value", models.DecimalField(decimal_places=2, max_digits=19)),
                (
                    "tx_recip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="recip", to="app.account"
                    ),
                ),
                (
                    "tx_sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="sender", to="app.account"
                    ),
                ),
            ],
            options={
                "verbose_name": "Transaction",
                "db_table": "payment_transactions",
                "ordering": ["tx_timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Favourite",
            fields=[
                ("tlg_id", models.IntegerField(primary_key=True, serialize=False)),
                ("favourites", models.ManyToManyField(related_name="favs", to=settings.AUTH_USER_MODEL)),
            ],
            options={
                "verbose_name": "Favourite",
                "db_table": "fav_table",
            },
        ),
        migrations.CreateModel(
            name="Card",
            fields=[
                ("uniq_id", models.IntegerField(primary_key=True, serialize=False)),
                ("expiration", models.DateField()),
                (
                    "corresponding_account",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="app.account"),
                ),
            ],
            options={
                "verbose_name": "Card",
                "db_table": "payment_cards",
            },
        ),
    ]
