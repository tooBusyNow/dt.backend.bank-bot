include: 
  - local: 'gitlab-templates/anchors.yml'


stages:
  - bridge
  - get_ip

  - deploy
  - destroy
  

infra:
  stage: bridge

  trigger:
    include: gitlab-templates/deploy-testserver.yml
    strategy: depend


code:
  stage: bridge

  trigger:
    include: gitlab-templates/build-and-test-code.yml
    strategy: depend


get_ip:
  before_script:
    - apk add --update curl bash jq unzip

  stage: get_ip
  tags: 
    - infra

  script:
    - echo Running Some Deploy Scripts
    - >
        response_pipeline=$(curl --header "PRIVATE-TOKEN: $GITLAB_TF_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/pipelines/$CI_PIPELINE_ID/bridges")
    - >
        INFRA_CHILD_ID=$(echo $response_pipeline | jq '.[] | select(.name == "infra") | .downstream_pipeline.id')

    - echo $INFRA_CHILD_ID

    - >
        APPLY_JOB_ID=$(curl --header "PRIVATE-TOKEN: $GITLAB_TF_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/pipelines/$INFRA_CHILD_ID/jobs" | jq '.[] | select(.name == "apply") | .id')
      
    - echo $APPLY_JOB_ID

    - 'curl -L --output artifacts.zip --header "PRIVATE-TOKEN: $GITLAB_TF_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/jobs/$APPLY_JOB_ID/artifacts"'

    - unzip artifacts.zip

  artifacts:
    paths:
      - ip.txt
    expire_in: 1h


deploy:
  stage: deploy
  tags:
    - deploy


  variables:
    TAG_LATEST : $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest

  before_script:
    
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)

  - chmod 400 "$RUNNER_ID_RSA"
  - ssh-add "$RUNNER_ID_RSA"
  
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  - cp $DOT_ENV_DOCKER .env.docker

  # Changing IP in ALLOWED_HOSTS 
  - export IP=$(cat ip.txt)
  - sed -i 's/ALLOWED_HOSTS=.*/ALLOWED_HOSTS='$IP'/' .env.docker

  # Changing Image in DockerCompose.yml
  - >
    sed -i 's#image: registry.*#image: '$TAG_LATEST'#' docker-compose-server.yml

  - cat docker-compose-server.yml

  script:
    - ping -W 1 -c 1 $IP
    - echo OK! Machine is online

    - scp -i $RUNNER_ID_RSA -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null .env.docker Makefile docker-compose-server.yml gitlab@$IP:/home/gitlab

    - ssh -i $RUNNER_ID_RSA -o StrictHostKeyChecking=no gitlab@$IP "
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
        docker pull $TAG_LATEST &&

        make docker_remote_stop | true &&
        make docker_remote_run
      "

    - echo Deployment is finished now!

  dependencies:
    - get_ip

destroy:
  stage: destroy
  tags:
    - destroy

  image: 
    name: hashicorp/terraform:light
    entrypoint:
    - /usr/bin/env
    - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

  variables:
    GITLAB_TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_COMMIT_REF_NAME}_state

  script:
    - !reference [.Run-Gitlab-TF-Configuration, script]
    - !reference [.Run-Yandex-Cloud-Configuration, script]

    - terraform apply -destroy -auto-approve

  when: manual
