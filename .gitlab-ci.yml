variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

stages:
  - lint_checks
  - build
  - deploy

check_lint:
  only:
    - dev
  stage: lint_checks

  image: python:3.10.10-slim-buster
  before_script:
    - apt-get update && apt-get install make
    - pip3 install flake8 black isort 

  script:
    - make lint check_lint

build_image:
  only:
    - dev
  stage: build
  image: docker:23.0.1

  services:
    - name: docker:23.0.1-dind

  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY 

  script:
    - docker build -t $IMAGE_NAME .
    - docker push $IMAGE_NAME


deploy:
  only:
    - dev
  stage: deploy
  when: manual

  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)

    - chmod 400 "$RUNNER_ID_RSA"
    - ssh-add "$RUNNER_ID_RSA"
   
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    - cp $DOT_ENV_DOCKER .env.docker

  script:
    - scp -i $RUNNER_ID_RSA -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null .env.docker Makefile docker-compose-server.yml $DEPLOYER_NAME@$REMOTE_ADDRESS:/home/$DEPLOYER_NAME

    - ssh -i $RUNNER_ID_RSA -o StrictHostKeyChecking=no $DEPLOYER_NAME@$REMOTE_ADDRESS "
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
        docker pull $IMAGE_NAME &&

        make docker_remote_stop || true &&
        make docker_remote_run
      "