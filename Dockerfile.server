# Python image based on apline
FROM python:3.10.10-alpine3.17 as base

# sys.stdout Ð¸ sys.stderr will be unbuffered
ENV PYTHONUNBUFFERED 1
# .pyc files will be absent
ENV PYTHONDONTWRITEBYTECODE 1
WORKDIR /backend

# Installing pipenv and exporting dep. to req.txt file

# NOTE: I don't want to store req.txt file in init repo,
# cause I'll have to regenerate it manually on every addition
# done with `pipenv install <package>`. 
# So instead, I will always have latest req.txt on this 
# stage and pass it to the next one.  

FROM base as pipenv-dep

COPY Pipfile Pipfile.lock ./
RUN pip install pipenv --no-cache-dir && \
    pipenv requirements > req.txt


# Starting app stage
FROM base as runtime

COPY --from=pipenv-dep /backend/req.txt ./req.txt
COPY shell/docker/ ./

# Installing deps and creating non-privileged user with corresponding group
RUN apk add --no-cache bash && \
    pip install --no-cache-dir -r ./req.txt && \
    \
    addgroup -Sg 1337 django && \
    adduser -DHG django -u 1337 -s /bin/bash django

COPY src src
RUN mkdir ./static && chown -R 1337:1337 /backend
    
# Starting container as a django user instead of root
USER django
CMD [ "bash", "docker-entry.server.sh" ]